{"ts":1371089729122,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*------------------------------------------------------------------------------\n * Model do recomendador\n */\nvar mysql = require('mysql'),\n    connection = mysql.createConnection({\n      host     : 'localhost',\n      user     : 'root',\n      password : 'Aim3eif7',\n      database : 'social',\n    }),\n    http = require('http');\n\n/*\n * Executa uma query no banco de dados\n *\n * @param cb\n */\nfunction db (query, data, cb) {\n    connection.query(query, data, cb);  \n}\n\n/*\n * Faz uma requisição HTTP para outro servidor\n *\n * @param cb\n */\nfunction Get (url , cb) {\n    http.get(url, function(httpResponse) {\n        var response = '';\n        httpResponse.on('data', function (data) {\n            response += data;\n        });\n        httpResponse.on('end', function () {\n            cb(JSON.parse(response.toString()))\n        });\n    });\n};\n\n/*------------------------------------------------------------------------------\n * Entidade país\n *\n * @property name\n */\nvar Country = function (params) {\n    var self = this;\n\n    this.name = params.name;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        db(\n            'INSERT INTO `country` SET ?',\n            {\n                'name' : this.name,\n            },\n            function () {\n                if (cb) {\n                    cb(self);\n                }\n            }\n        );\n    };\n};\n\n/*\n * Busca o país na API da geoname\n *\n * @param name\n * @param cb\n */\nCountry.find = function (name, cb, param) {\n    if (name) {\n        var url;\n\n        if(param) {\n            url = 'http://api.geonames.org/search?' +\n                  'username=augustomorgan&' +\n                  'maxRows=1' +\n                  '&type=json' +\n                  '&q=' + param + name;\n        } else {\n            url = 'http://api.geonames.org/search?' +\n                  'username=augustomorgan' +\n                  '&maxRows=1' +\n                  '&type=json' +\n                  '&q=' + name;\n        }\n\n        Get(\n            url,\n            function (places) {\n                var country;\n\n                places = places.geonames[0];\n                if (!places) {\n                    return cb(null);\n                }\n\n                country = new Country ({\n                    name : places.countryName\n                });\n\n                if (cb) {\n                    cb(country);\n                }\n            }\n        );\n    } else if (cb) {\n        cb(null);\n    }\n};\n\nexports.Country = Country;\n\n/*------------------------------------------------------------------------------\n * Entidade cidade\n *\n * @property name\n * @property country\n */\nvar City = function (params) {\n    var self = this;\n\n    this.name = params.name;\n    this.country = params.country;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        self.createCountry(function (country) {\n            if (country) {\n                self.country = country.name;\n            }\n\n            db(\n                'INSERT INTO `city` SET ?',\n                {\n                    'name' : self.name,\n                    'country' : self.country,\n                },\n                function () {\n                    if (cb) {\n                        cb(self);\n                    }\n                }\n            );\n        });\n    };\n\n    /*\n     * Salva o país da cidade no banco de dados\n     *\n     * @param cb\n     */\n    this.createCountry = function(cb) {\n        Country.find(self.country, function (country) {\n            if(country) {\n                country.save(function () {\n                    if (cb) {\n                        cb(country);\n                    }\n                });\n            } else if (cb) {\n                cb(null);\n            }  \n        });\n    };\n};\n\n/*\n * Busca a cidade na api da geoname\n *\n * @param name\n * @param cb\n */\nCity.find = function (name, cb) {\n    if (name) {\n        Get(\n            'http://api.geonames.org/search?' +\n            'username=augustomorgan' +\n            '&maxRows=1' +\n            '&type=json' +\n            '&q=' + name,\n            function (places) {\n                var city;\n\n                places = places.geonames[0];\n                city = new City({\n                    name : places.name,\n                    country : places.countryName\n                });\n\n                if (cb) {\n                    cb(city);\n                }\n            }\n        );\n    } else if (cb) {\n        cb(null);\n    }\n};\n\nexports.City = City;\n\n/*------------------------------------------------------------------------------\n * Entidade categoria\n *\n * @property name\n */\nvar Category = function (params) {\n    var self = this;\n\n    this.name = params.name;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        db(\n            'INSERT INTO `category` SET ?',\n            {\n                'name' : self.name\n            },\n            function () {\n                if (cb) {\n                    cb(self);\n                }\n            }\n        );\n    };\n};\n\nexports.Category = Category;\n\n/*------------------------------------------------------------------------------\n * Entidade stilo\n *\n * @property category\n * @property culturalAct\n */\nvar Style = function (params) {\n    var self = this;\n\n    this.category = params.category;\n    this.culturalAct = params.culturalAct;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        db(\n            'INSERT INTO `style` SET ?',\n            {\n                'category' : this.category,\n                'culturalAct' : this.culturalAct\n            },\n            function () {\n                cb(self);\n            }\n        );\n    };\n};\n\nexports.Style = Style;\n\n/*------------------------------------------------------------------------------\n * Entidade ator\n *\n * @property name\n */\nvar Actor = function (params) {\n    var self = this;\n\n    this.name = params.name;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        db(\n            'INSERT INTO `actor` SET ?',\n            {\n                'name' : self.name\n            },\n            function () {\n                if (cb) {\n                    cb(self);\n                }\n            }\n        );\n    };\n};\n\nexports.Actor = Actor;\n\n/*------------------------------------------------------------------------------\n * Relação atuação\n *\n * @property actor\n * @property movie\n */\nvar Act = function (params) {\n    var self = this;\n\n    this.actor = params.actor;\n    this.movie = params.movie;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        db(\n            'INSERT INTO `act` SET ?',\n            {\n                'actor' : self.actor,\n                'movie' : self.movie\n            },\n            function () {\n                if (cb) {\n                    cb(self);\n                }\n            }\n        );\n    };\n};\n\nexports.Act = Act;\n\n/*------------------------------------------------------------------------------\n * Entidade diretor\n *\n * @property name\n */\nvar Director = function (params) {\n    var self = this;\n\n    this.name = params.name;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        db(\n            'INSERT INTO `director` SET ?',\n            {\n                'name' : self.name\n            },\n            function () {\n                if (cb) {\n                    cb(self);\n                }\n            }\n        );\n    };\n};\n\nexports.Director = Director;\n\n/*------------------------------------------------------------------------------\n * Relação direção\n *\n * @property director\n * @property movie\n */\nvar Direct = function (params) {\n    var self = this;\n\n    this.director = params.director;\n    this.movie = params.movie;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        db(\n            'INSERT INTO `direct` SET ?',\n            {\n                'director' : self.director,\n                'movie' : self.movie\n            },\n            function () {\n                if (cb) {\n                    cb(self);\n                }\n            }\n        );\n    };\n};\n\nexports.Direct = Direct;\n\n/*------------------------------------------------------------------------------\n * Entidade filme\n *\n * @property name\n * @property plot\n * @property IMDBrating\n * @property IMDBvotes\n * @property directors\n * @property actors\n * @property categories\n */\nvar Movie = function (params) {\n    var self = this;\n\n    this.name = params.name;\n    this.plot = params.plot;\n    this.IMDBrating = params.IMDBrating;\n    this.IMDBvotes = params.IMDBvotes;\n    this.directors = params.directors;\n    this.actors = params.actors;\n    this.categories = params.categories;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        var directorsCreated = false,\n            actorsCreated = false,\n            categoriesCreated = false;\n\n        self.createCulturalAct(function () {\n            self.createMovie(function () {\n                self.createDirectors(function () {\n                    directorsCreated = true;\n                    if (\n                        directorsCreated &&\n                        actorsCreated &&\n                        categoriesCreated &&\n                        cb\n                    ) {\n                        cb(self);\n                    }\n                });\n                self.createActors(function () {\n                    actorsCreated = true;\n                    if (\n                        directorsCreated &&\n                        actorsCreated &&\n                        categoriesCreated &&\n                        cb\n                    ) {\n                        if (cb) {\n                            cb(self);\n                        }\n                    }\n                });\n                self.createCategories(function () {\n                    categoriesCreated = true;\n                    if (\n                        directorsCreated &&\n                        actorsCreated &&\n                        categoriesCreated &&\n                        cb\n                    ) {\n                        if (cb) {\n                            cb(self);\n                        }\n                    }\n                });\n\n            });\n        });\n    };\n\n    /*\n     * Insere a entidade filme\n     *\n     * @param cb\n     */\n    this.createMovie = function (cb) {\n        db(\n            'INSERT INTO `movie` SET ?',\n            {\n                'name' : self.name,\n                'plot' : self.plot,\n                'IMDBrating' : self.IMDBrating,\n                'IMDBvotes' : self.IMDBvotes,\n            },\n            function () {\n                if (cb) {\n                    cb(self);\n                }\n            }\n        );\n    };\n\n    /*\n     * Insere entidade ato cultural\n     *\n     * @param cb\n     */\n    this.createCulturalAct = function (cb) {\n        db(\n            'INSERT INTO `culturalAct` SET ?',\n            {\n                'name' : self.name,\n            },\n            function () {\n                if (cb) {\n                    cb({name : self.name});\n                }\n            }\n        );\n    };\n\n    /*\n     * Insere entidade diretor\n     *\n     * @param cb\n     */\n    this.createDirector = function (director, cb) {\n        director.save(function () {\n            var direct = new Direct({\n                director : director.name,\n                movie : self.name\n            });\n\n            direct.save(function () {\n                if (cb) {\n                    cb(director);\n                }\n            });\n        });\n    };\n\n    /*\n     * Insere todos os diretores\n     *\n     * @param cb\n     */\n    this.createDirectors = function (cb) {\n        var handled = 0;\n\n        for (var i in self.directors) {\n            if (self.directors[i])\n            self.createDirector(self.directors[i], function () {\n                handled++;\n                if (handled >= self.directors.length) {\n                    if (cb) {\n                        cb(self.directors);\n                    }\n                }\n            });\n        }\n    };\n\n    /*\n     * Insere entidade categoria\n     *\n     * @param cb\n     */\n    this.createCategory = function (category, cb) {\n        category.save(function () {\n            var style = new Style({\n                category : category.name,\n                culturalAct : self.name\n            });\n            \n            style.save(function () {\n                if (cb) {\n                    cb(category);\n                }\n            });\n        });\n    };\n\n    /*\n     * Insere todas as categorias\n     *\n     * @param cb\n     */\n    this.createCategories = function (cb) {\n        var handled = 0;\n\n        for (var i in self.categories) {\n            if (self.categories[i])\n            self.createCategory(self.categories[i], function () {\n                handled++;\n                if (handled >= self.categories.length) {\n                    if (cb) {\n                        cb(self.categories);\n                    }\n                }\n            });\n        }\n    };\n\n    /*\n     * Insere entidade ator\n     *\n     * @param cb\n     */\n    this.createActor = function (actor, cb) {\n        actor.save(function () {\n            var act = new Act({\n                actor : actor.name,\n                movie : self.name\n            });\n\n            act.save(function () {\n                if (cb) {\n                    cb(actor);\n                }\n            });\n        });\n    };\n\n    /*\n     * Insere todos os atores\n     *\n     * @param cb\n     */\n    this.createActors = function (cb) {\n        var handled = 0;\n        for (var i in self.actors) {\n            if (self.actors[i])\n            self.createActor(self.actors[i], function () {\n                handled++;\n                if (handled >= self.actors.length) {\n                    if (cb) {\n                        cb(self.actors);\n                    }\n                }\n            });\n        }\n    };\n};\n\n/*\n * Busca o filme na omdb\n *\n * @param name\n * @param cb\n */\nMovie.find = function (name, cb) {\n    Get(\n        \"http://www.omdbapi.com/?i=\" + name,\n        function (tempMovie) {\n            var directors = [],\n                tempDirectors = tempMovie.Director.split(', ');\n\n            for(var i in tempDirectors) {\n                directors.push(new Director ({\n                    name   : tempDirectors[i]\n                }));\n            }\n\n            var actors = [],\n                tempActors = tempMovie.Actors.split(', ');\n            \n            for(var i in tempActors) {\n                actors.push(new Actor ({\n                    name   : tempActors[i]\n                }));\n            }\n\n            var categories = [],\n                tempCategories = tempMovie.Genre.split(', ');\n            \n            for(var i in tempCategories) {\n                categories.push(new Category ({\n                    name   : tempCategories[i]\n                }));\n            }\n\n            var movie = new Movie ({\n                    name : tempMovie.Title,\n                    plot : tempMovie.Plot,\n                    IMDBrating: tempMovie.imdbRating,\n                    IMDBvotes : tempMovie.imdbVotes,\n                    directors : directors,\n                    actors : actors,\n                    categories : categories\n                });\n\n            if (cb) {\n                cb(movie);\n            }\n        }\n    );\n};\n\nexports.Movie = Movie;\n\n/*------------------------------------------------------------------------------\n * Entidade musico\n *\n * @property name\n */\nvar Musician = function (params) {\n    var self = this;\n\n    this.name = params.name;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        db(\n            'INSERT INTO `musician` SET ?',\n            {\n                'name' : self.name\n            },\n            function () {\n                if (cb) {\n                    cb(self);\n                }\n            }\n        );\n    };\n};\n\nexports.Musician = Musician;\n\n/*------------------------------------------------------------------------------\n * Relação participação em banda\n *\n * @property musician\n * @property band\n */\nvar Participate = function (params) {\n    var self = this;\n\n    this.musician = params.musician;\n    this.band = params.band;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        db(\n            'INSERT INTO `participate` SET ?',\n            {\n                'musician' : this.musician,\n                'band' : this.band\n            },\n            function () {\n                if (cb) {\n                    cb(self);\n                }\n            }\n        );\n    };\n};\n\nexports.Participate = Participate;\n\n/*------------------------------------------------------------------------------\n * Relação bandas similares\n *\n * @property band\n * @property similar\n */\nvar Similar = function (params) {\n    var self = this;\n\n    this.band = params.band;\n    this.similar = params.similar;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        db(\n            'INSERT INTO `similar` SET ?',\n            {\n                'band' : self.band,\n                'similar' : self.similar\n            },\n            function () {\n                cb(self);\n            }\n        );\n    };\n};\n\nexports.Similar = Similar;\n\n/*------------------------------------------------------------------------------\n * Entidade banda\n *\n * @property name\n * @property country\n * @property similars\n * @property musicians\n * @property categories\n */\nvar Band = function (params) {\n    var self = this;\n\n    this.name = params.name;\n    this.country = params.country;\n    this.similars = params.similars;\n    this.musicians = params.musicians;\n    this.categories = params.categories;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        var similarsCreated = true,\n            musiciansCreated = false,\n            categoriesCreated = false;\n\n        self.createCulturalAct(function () {\n                self.createCountry(function (country) {\n                    \n                    if(country) {\n                        self.country = country.name;\n                    }\n                    else {\n                        self.country = null;\n                    }\n\n                    self.createBand(function () {\n                        self.createSimilars(function () {\n                            similarsCreated = true;\n                            if (\n                                similarsCreated &&\n                                musiciansCreated &&\n                                categoriesCreated &&\n                                cb\n                            ) {\n                                cb();\n                            }\n                        });\n                        self.createMusicians(function (err) {\n                            musiciansCreated = true;\n                            if (\n                                similarsCreated &&\n                                musiciansCreated &&\n                                categoriesCreated &&\n                                cb\n                            ) {\n                                cb();\n                            }\n                        });\n                        self.createCategories(function (err) {\n                            categoriesCreated = true;\n                            if (\n                                similarsCreated &&\n                                musiciansCreated &&\n                                categoriesCreated &&\n                                cb\n                            ) {\n                                cb();\n                            }\n                        });\n                    });\n                });\n        });\n    };\n\n    /*\n     * Insere entidade banda\n     *\n     * @param cb\n     */\n    this.createBand = function (cb) {\n        db(\n            'INSERT INTO `band` SET ?',\n            {\n                'name'      : self.name,\n                'location'  : self.country\n            },\n            function () {\n                cb(self);\n            }\n        );\n    };\n\n    /*\n     * Insere entidade ato cultural\n     *\n     * @param cb\n     */\n    this.createCulturalAct = function (cb) {\n        db(\n            'INSERT INTO `culturalAct` SET ?',\n            {\n                'name'     : self.name,\n            },\n            function () {\n                cb({name : self.name});\n            }\n        );\n    };\n\n    /*\n     * Insere entidade país\n     *\n     * @param cb\n     */\n    this.createCountry = function (cb) {\n        if(self.country){\n            Country.find(self.country, function (country) {\n                if(country)\n                    country.save(function () {\n                        cb(country);\n                    });\n                else cb(null);\n            });\n        } else cb(null);\n    };\n\n    /*\n     * Insere entidade similar\n     *\n     * @param cb\n     */\n    this.createSimilar = function (band, cb) {\n        band.save(function () {\n            var similar = new Similar({\n                band        : self.name,\n                similar     : band.name\n            });\n\n            similar.save(function () {\n                cb(band);\n            });\n        });\n    };\n\n    /*\n     * Insere todos os similares\n     *\n     * @param cb\n     */\n    this.createSimilars = function (cb) {\n        if(self.similars && self.similars.length > 0) {\n            var handled = 0;\n\n            for (var i in self.similars) {\n                self.createSimilar(self.similars[i], function () {\n                    handled++;\n                    if (handled >= self.similars.length) {\n                        cb(self.similars);\n                    }\n                });\n            }\n        } else cb(null);\n    };\n\n    /*\n     * Insere entidade categoria\n     *\n     * @param cb\n     */\n    this.createCategory = function (category, cb) {\n        category.save(function () {\n            var style = new Style({\n                category    : category.name,\n                culturalAct : self.name\n            });\n\n            style.save(function () {\n                cb(category);\n            });\n        });\n    };\n\n    /*\n     * Insere todas as categorias\n     *\n     * @param cb\n     */\n    this.createCategories = function (cb) {\n        if(self.categories && self.categories.length > 0){\n            var handled = 0;\n\n            for (var i in self.categories) {\n                self.createCategory(self.categories[i], function () {\n                    handled++;\n                    if (handled >= self.categories.length) {\n                        cb(self.categories);\n                    }\n                });\n            }\n        } else cb(null);\n    };\n\n    /*\n     * Insere entidade musico\n     *\n     * @param cb\n     */\n    this.createMusician = function (musician, cb) {\n        musician.save(function () {\n            var participate = new Participate({\n                musician    : musician.name,\n                band        : self.name\n            });\n\n            participate.save(function () {\n                cb(musician);\n            });\n        });\n    };\n\n    /*\n     * Insere todos os musicos\n     *\n     * @param cb\n     */\n    this.createMusicians = function (cb) {\n        if(self.musicians && self.musicians.length > 0){\n            var handled = 0;\n\n            for (var i in self.musicians) {\n                self.createMusician(self.musicians[i], function () {\n                    handled++;\n                    if (handled >= self.musicians.length) {\n                        cb(self.musicians);\n                    }\n                });\n            }\n        } else {\n            cb(null);\n        }\n    };\n};\n\n/*\n * Busca a banda na lastFM\n *\n * @param name\n * @param cb\n */\nBand.find = function (name, cb) {\n    Get(\n        'http://ws.audioscrobbler.com/2.0/?' +\n        'method=artist.getinfo&' +\n        'autocorrect=1&' +\n        'api_key=206336a6642d03f381ec036dc6eb07f9&' +\n        'format=json&' +\n        'artist=' + name,\n        function (lastFMBand) {\n            lastFMBand = lastFMBand.artist;\n                if(lastFMBand) {\n\n                var bandMembers = [],\n                    tempBandMembers = lastFMBand.bandmembers;\n\n                if(tempBandMembers){\n                    for(var i in tempBandMembers.member) {\n                        bandMembers.push(new Musician ({\n                            name   : tempBandMembers.member[i].name\n                        }));\n                    }\n                }\n\n                var similars = [],\n                    tempSimilars = lastFMBand.similar;\n                \n                if(tempSimilars) {          \n                    for(var i in tempSimilars.artist) {\n                        similars.push(new Band ({\n                            name   : tempSimilars.artist[i].name\n                        }));\n                    }\n                }\n\n                var categories = [],\n                    tempCategories = lastFMBand.tags;\n                \n                if(tempCategories) {\n                    for(var i in tempCategories.tag) {\n                        categories.push(new Category ({\n                            name   : tempCategories.tag[i].name\n                        }));\n                    }\n                }\n\n                var place = null;\n                if(lastFMBand.bio){\n                    if(lastFMBand.bio.placeformed)\n                        place = lastFMBand.bio.placeformed;\n                }\n\n                var band = new Band({\n                    name       : lastFMBand.name,\n                    similars   : similars,\n                    musicians  : bandMembers,\n                    categories : categories,\n                    country    : place\n                });\n\n                cb(band)\n            }\n            else console.log(\"Banda Nao Encontrada!\" + name);\n        }\n    );\n};\n\nexports.Band = Band;\n\n/*------------------------------------------------------------------------------\n * Relação conhecer\n *\n * @property person\n * @property colleague\n */\nvar Know = function (params) {\n    var self = this;\n\n    this.person = params.person;\n    this.colleague = params.colleague;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        db(\n            'INSERT INTO `know` SET ?',\n            {\n                'person' : self.person,\n                'colleague': self.colleague\n            },\n            function () {\n                if (cb) {\n                    cb(self);\n                }\n            }\n        );\n    };\n};\n\nexports.Know = Know;\n\n/*------------------------------------------------------------------------------\n * Relação curtir\n *\n * @property person\n * @property culturalAct\n * @property rating\n */\nvar Like = function (params) {\n    var self = this;\n\n    this.person = params.person;\n    this.culturalAct = params.culturalAct;\n    this.rating = params.rating;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        db(\n            'INSERT INTO `like` SET ?',\n            {\n                'person' : self.person,\n                'culturalAct': self.culturalAct,\n                'rating' : self.rating\n            },\n            function () {\n                if (cb) {\n                    cb(self);\n                }\n            }\n        );\n    };\n};\n\nexports.Like = Like;\n\n/*------------------------------------------------------------------------------\n * Entidade pessoa\n *\n * @property uri\n * @property name\n * @property hometown\n */\nvar Person = function (params) {\n    var self = this;\n\n    this.uri = params.uri;\n    this.name = params.name;\n    this.hometown = params.hometown;\n\n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        self.createHometown(function (city) {\n\n            if(city) {\n                self.hometown = city.name;\n            } else {\n                self.hometown = null;\n            }\n\n            db(\n                'INSERT INTO `person` SET ?',\n                {\n                    'uri' : self.uri,\n                    'name' : self.name,\n                    'hometown' : self.hometown\n                },\n                function () {\n                    if (cb) {\n                        cb(self);\n                    }\n                }\n            );\n        });\n    };\n\n    /*\n     * Cria a cidade da pessoa no banco de dados\n     *\n     * @param cb\n     */\n    this.createHometown = function (cb) {\n        City.find(self.hometown, function (city) {\n            if(city) {\n                city.save(function () {\n                    if (cb) {\n                        cb(city);\n                    }\n                });\n            } else if (cb) {\n                cb(city);\n            }\n        });\n    }\n};\n\nexports.Person = Person;"]],"start1":0,"start2":0,"length1":0,"length2":29530}]],"length":29530}
{"contributors":[],"silentsave":false,"ts":1371089916585,"patch":[[{"diffs":[[0,"ring()))"],[1,";"],[0,"\n       "]],"start1":810,"start2":810,"length1":16,"length2":17},{"diffs":[[0,"   });\n}"],[-1,";"],[0,"\n\n/*----"]],"start1":833,"start2":833,"length1":17,"length2":16}]],"length":29530,"saved":false}
{"contributors":[],"silentsave":false,"ts":1371092391246,"patch":[[{"diffs":[[0,", cb"],[-1,", param"],[0,") {\n"]],"start1":1520,"start2":1520,"length1":15,"length2":8},{"diffs":[[0,"r url;\n\n"],[1,"'http://dev.virtualearth.net/REST/v1/Locations/' + name + '?output=json&key=Ap7rxE2Zsd4JrfEpq17pREQ6u6SjmQVPWwu3-BjSXJeGzwQYE641aiGxU25B_8TQ'\n\n"],[0,"        "]],"start1":1554,"start2":1554,"length1":16,"length2":159}]],"length":29666,"saved":false}
{"ts":1371092451855,"patch":[[{"diffs":[[0," var url"],[-1,";\n\n"],[1," = "],[0,"'http://"]],"start1":1551,"start2":1551,"length1":19,"length2":19},{"diffs":[[0,"+ '?"],[-1,"output=json&"],[1,"' +\n                  'output=json&' +\n                  '"],[0,"key="]],"start1":1618,"start2":1618,"length1":20,"length2":66},{"diffs":[[0,"Q'\n\n"],[-1,"        if(param) {\n            url = 'http://api.geonames.org/search?' +\n                  'username=augustomorgan&' +\n                  'maxRows=1' +\n                  '&type=json' +\n                  '&q=' + param + name;\n        } else {\n            url = 'http://api.geonames.org/search?' +\n                  'username=augustomorgan' +\n                  '&maxRows=1' +\n                  '&type=json' +\n                  '&q=' + name;\n        }\n\n"],[0,"    "]],"start1":1747,"start2":1747,"length1":458,"length2":8}]],"length":29262,"saved":false}
{"ts":1371092512797,"patch":[[{"diffs":[[0,"      function ("],[-1,"places"],[1,"data"],[0,") {\n            "]],"start1":1787,"start2":1787,"length1":38,"length2":36},{"diffs":[[0,"            "],[1,"console.log()\n                /*"],[0,"var country;"]],"start1":1815,"start2":1815,"length1":24,"length2":56},{"diffs":[[0,"               }"],[1,"*/"],[0,"\n            }\n "]],"start1":2173,"start2":2173,"length1":32,"length2":34}]],"length":29294,"saved":false}
{"ts":1371092516825,"patch":[[{"diffs":[[0,"ole.log("],[1,"data"],[0,")\n      "]],"start1":1831,"start2":1831,"length1":16,"length2":20}]],"length":29298,"saved":false}
{"ts":1371093011912,"patch":[[{"diffs":[[0,"log(data"],[1,".resourceSets[0].resources"],[0,")\n      "]],"start1":1835,"start2":1835,"length1":16,"length2":42}]],"length":29324,"saved":false}
{"ts":1371093054986,"patch":[[{"diffs":[[0,"esources"],[1,".name"],[0,")\n      "]],"start1":1861,"start2":1861,"length1":16,"length2":21}]],"length":29329,"saved":false}
{"ts":1371093106809,"patch":[[{"diffs":[[0,"esources"],[-1,".name"],[0,")\n      "]],"start1":1861,"start2":1861,"length1":21,"length2":16}]],"length":29324,"saved":false}
{"ts":1371093140977,"patch":[[{"diffs":[[0,"esources"],[1,".name"],[0,")\n      "]],"start1":1861,"start2":1861,"length1":16,"length2":21}]],"length":29329,"saved":false}
{"ts":1371093184189,"patch":[[{"diffs":[[0,"esources"],[1,"[0]"],[0,".name)\n "]],"start1":1861,"start2":1861,"length1":16,"length2":19}]],"length":29332,"saved":false}
{"ts":1371093693393,"patch":[[{"diffs":[[0,"log("],[-1,"data.resourceSets[0].resources[0].name"],[0,")\n  "]],"start1":1835,"start2":1835,"length1":46,"length2":8},{"diffs":[[0,"        "],[-1,"/*"],[0,"var coun"]],"start1":1849,"start2":1849,"length1":18,"length2":16},{"diffs":[[0,"   place"],[-1,"s"],[0," = "],[-1,"places.geonames[0]"],[1,"data.resourceSets[0].resources[0].name"],[0,";\n      "]],"start1":1884,"start2":1884,"length1":38,"length2":57},{"diffs":[[0,"  if (!place"],[-1,"s"],[0,") {\n        "]],"start1":1949,"start2":1949,"length1":25,"length2":24},{"diffs":[[0,"name : place"],[-1,"s.countryName"],[0,""],[1,""],[0,"\n           "]],"start1":2082,"start2":2082,"length1":37,"length2":24},{"diffs":[[0,"       }"],[-1,"*/"],[0,""],[1,""],[0,"\n       "]],"start1":2184,"start2":2184,"length1":18,"length2":16}]],"length":29295,"saved":false}
{"ts":1371093738094,"patch":[[{"diffs":[[0,") {\n"],[-1,"                console.log()\n"],[0,"    "]],"start1":1807,"start2":1807,"length1":38,"length2":8}]],"length":29265,"saved":false}
{"ts":1371094316791,"patch":[[{"diffs":[[0,"      );\n    };\n"],[1,"    \n    this.saveBand = function (cb) {\n        \n    };\n    \n    this.saveMovie = function (cb) {\n        \n    };\n"],[0,"};\n\nexports.Like"]],"start1":28019,"start2":28019,"length1":32,"length2":147}]],"length":29645,"saved":false}
{"ts":1371094501732,"patch":[[{"diffs":[[0,"nction (data) {\n"],[1,"                console.log()\n"],[0,"                "]],"start1":1795,"start2":1795,"length1":32,"length2":62}]],"length":29295,"saved":false}
{"ts":1371094505841,"patch":[[{"diffs":[[0,"                "],[1,"var "],[0,"place = data.res"]],"start1":1871,"start2":1871,"length1":32,"length2":36}]],"length":29299,"saved":false}
{"ts":1371094508584,"patch":[[{"diffs":[[0,") {\n"],[-1,"                console.log()\n"],[0,"    "]],"start1":1807,"start2":1807,"length1":38,"length2":8}]],"length":29269,"saved":false}
{"ts":1371094584010,"patch":[[{"diffs":[[0,"        "],[-1,"Get(\n           "],[1,"var url ="],[0," 'http:/"]],"start1":3710,"start2":3710,"length1":32,"length2":25},{"diffs":[[0,"        "],[1,"      "],[0,"'usernam"]],"start1":3768,"start2":3768,"length1":16,"length2":22},{"diffs":[[0,"        "],[1,"     "],[1," "],[0,"'&maxRow"]],"start1":3813,"start2":3813,"length1":16,"length2":22},{"diffs":[[0,"axRows=1' +\n"],[1,"      "],[0,"            "]],"start1":3830,"start2":3830,"length1":24,"length2":30},{"diffs":[[0,"        "],[1,"   "],[1,"   "],[0,"'&q=' + "]],"start1":3879,"start2":3879,"length1":16,"length2":22},{"diffs":[[0,"  '&q=' + name,\n"],[1,"        \n        Get(\n            url,\n"],[0,"            func"]],"start1":3891,"start2":3891,"length1":32,"length2":71}]],"length":29325,"saved":false}
{"ts":1371094858122,"patch":[[{"diffs":[[0,"p://"],[-1,"api.geonames.org/search?' +\n                  'username=augustomorgan"],[1,"dev.virtualearth.net/REST/v1/Locations/' + name + '?"],[0,"' +\n"]],"start1":3732,"start2":3732,"length1":77,"length2":60},{"diffs":[[0,"   '"],[-1,"&maxRows=1"],[1,"output=json&"],[0,"' +\n"]],"start1":3807,"start2":3807,"length1":18,"length2":20},{"diffs":[[0,"   '"],[-1,"&type=json' +"],[1,"key=Ap7rxE2Zsd4JrfEpq17pREQ6u6SjmQVPWwu3-BjSXJeGzwQYE641aiGxU25B_8TQ'"],[0,"\n   "]],"start1":3842,"start2":3842,"length1":21,"length2":77},{"diffs":[[0,"    "],[-1," "],[1,"\n"],[0,"        "],[-1," '&q=' + name,"],[1,"console.log (url)"],[0,"\n   "]],"start1":3920,"start2":3920,"length1":31,"length2":34},{"diffs":[[0,"        "],[-1,"\n       "],[1,"/*"],[0," Get(\n  "]],"start1":3951,"start2":3951,"length1":24,"length2":18},{"diffs":[[0,"    }\n        );"],[1," */"],[0,"\n    } else if ("]],"start1":4314,"start2":4314,"length1":32,"length2":35}]],"length":29366,"saved":false}
{"ts":1371094990110,"patch":[[{"diffs":[[0,"    "],[-1,"console.log (url)\n        /*"],[0," Get"]],"start1":3929,"start2":3929,"length1":36,"length2":8},{"diffs":[[0,"nction ("],[-1,"places"],[1,"data"],[0,") {\n    "]],"start1":3970,"start2":3970,"length1":22,"length2":20},{"diffs":[[0,"r city;\n"],[1,"                console.log(data)"],[0,"\n       "]],"start1":4004,"start2":4004,"length1":16,"length2":49},{"diffs":[[0,"            "],[1,"/*"],[0,"places = pla"]],"start1":4050,"start2":4050,"length1":24,"length2":26},{"diffs":[[0,"             });"],[-1,""],[0,""],[1,"*/"],[0,"\n\n              "]],"start1":4219,"start2":4219,"length1":32,"length2":34},{"diffs":[[0,"     ); "],[-1,"*/"],[0,""],[1,""],[0,"\n    } e"]],"start1":4330,"start2":4330,"length1":18,"length2":16}]],"length":29371,"saved":false}
{"ts":1371095029344,"patch":[[{"diffs":[[0,"log(data"],[1,".resoruceSets[0]"],[0,")\n      "]],"start1":4036,"start2":4036,"length1":16,"length2":32}]],"length":29387,"saved":false}
{"ts":1371095051401,"patch":[[{"diffs":[[0,"ata.reso"],[-1,"r"],[0,"u"],[1,"r"],[0,"ceSets[0"]],"start1":4041,"start2":4041,"length1":18,"length2":18}]],"length":29387,"saved":false}
{"ts":1371095111542,"patch":[[{"diffs":[[0,"eSets[0]"],[1,".resources[0].name"],[0,")\n      "]],"start1":4052,"start2":4052,"length1":16,"length2":34}]],"length":29405,"saved":false}
{"contributors":[],"silentsave":false,"ts":1371095708370,"patch":[[{"diffs":[[0,"esources"],[-1,"[0].name"],[0,")\n      "]],"start1":4062,"start2":4062,"length1":24,"length2":16},{"diffs":[[0," };\n"],[-1,"    \n    this.saveBand = function (cb) {\n        \n    };\n    \n    this.saveMovie = function (cb) {\n        \n    };\n"],[0,"};\n\n"]],"start1":27898,"start2":27898,"length1":123,"length2":8}]],"length":29397,"saved":false}
{"ts":1371095766973,"patch":[[{"diffs":[[0,"urceSets"],[-1,"[0].resources"],[0,")\n      "]],"start1":4049,"start2":4049,"length1":29,"length2":16}]],"length":29384,"saved":false}
{"ts":1371095804324,"patch":[[{"diffs":[[0,"log(data"],[-1,".resourceSets"],[0,")\n      "]],"start1":4036,"start2":4036,"length1":29,"length2":16}]],"length":29371,"saved":false}
{"ts":1371095818317,"patch":[[{"diffs":[[0,"log(data"],[1,".resourceSets[0].resources"],[0,")\n      "]],"start1":4036,"start2":4036,"length1":16,"length2":42}]],"length":29397,"saved":false}
{"ts":1371095881784,"patch":[[{"diffs":[[0,"ons/' + name + '"],[1," br"],[0,"?' +\n           "]],"start1":3771,"start2":3771,"length1":32,"length2":35}]],"length":29400,"saved":false}
{"contributors":[],"silentsave":false,"ts":1371139847093,"patch":[[{"diffs":[[0,"esources"],[1,"[0].name"],[0,")\n      "]],"start1":4065,"start2":4065,"length1":16,"length2":24},{"diffs":[[0,"function (cb) {\n"],[1,"        if (this.culturalAct.indexOf(\"http://en.wikipedia.org/wiki/\") > -1) {\n            \n        } else {\n            \n        }\n        \n"],[0,"        db(\n    "]],"start1":27556,"start2":27556,"length1":32,"length2":172}]],"length":29548,"saved":false}
{"ts":1371139888093,"patch":[[{"diffs":[[0,") {\n            "],[1,"this.createBand();"],[0,"\n        } else "]],"start1":27646,"start2":27646,"length1":32,"length2":50},{"diffs":[[0,"e {\n            "],[1,"this.createMovie();"],[0,"\n        }\n     "]],"start1":27694,"start2":27694,"length1":32,"length2":51}]],"length":29585,"saved":false}
{"ts":1371139909127,"patch":[[{"diffs":[[0,"ateBand("],[1,"this.createLike"],[0,");\n     "]],"start1":27670,"start2":27670,"length1":16,"length2":31},{"diffs":[[0,"teMovie("],[1,"this.createLike"],[0,");\n     "]],"start1":27734,"start2":27734,"length1":16,"length2":31}]],"length":29615,"saved":false}
{"ts":1371139920105,"patch":[[{"diffs":[[0,"      );\n    };\n"],[1,"    \n    this.createLike = function () {\n        \n    };\n"],[0,"};\n\nexports.Like"]],"start1":28104,"start2":28104,"length1":32,"length2":89}]],"length":29672,"saved":false}
{"ts":1371139953974,"patch":[[{"diffs":[[0,"indexOf("],[-1,"\""],[1,"'"],[0,"http://e"]],"start1":27601,"start2":27601,"length1":17,"length2":17},{"diffs":[[0,"rg/wiki/"],[-1,"\""],[1,"'"],[0,") > -1) "]],"start1":27631,"start2":27631,"length1":17,"length2":17},{"diffs":[[0,"/') > -1) {\n"],[1,"            this.culturalAct = this.culturalAct.replace('http://en.wikipedia.org/wiki/', '');\n"],[0,"            "]],"start1":27638,"start2":27638,"length1":24,"length2":118}]],"length":29766,"saved":false}
{"contributors":[],"silentsave":false,"ts":1371140412235,"patch":[[{"diffs":[[0,"        "],[-1,"console.log("],[1,"data = "],[0,"data.res"]],"start1":4023,"start2":4023,"length1":28,"length2":23},{"diffs":[[0,"name"],[-1,")\n                /*places = places.geonames[0];"],[1,"; // Preciso fazer o pegar somente a parte referente à Cidade\n                "],[0,"\n   "]],"start1":4072,"start2":4072,"length1":56,"length2":86},{"diffs":[[0,"     });"],[-1,"*/"],[0,"\n\n      "]],"start1":4289,"start2":4289,"length1":18,"length2":16}]],"length":29789,"saved":false}
{"ts":1371141716913,"patch":[[{"diffs":[[0,"        "],[-1,"\n                "],[1,"data = data.replace(/[/,]+[a-zA-Z\\ ]*/ , '');\n                console.log (data);\n                /*"],[0,"city = n"]],"start1":4146,"start2":4146,"length1":33,"length2":116},{"diffs":[[0,"             });"],[1,"*/"],[0,"\n\n              "]],"start1":4364,"start2":4364,"length1":32,"length2":34}]],"length":29874,"saved":false}
{"ts":1371141999857,"patch":[[{"diffs":[[0,"var city"],[1," , country"],[0,";\n      "]],"start1":4005,"start2":4005,"length1":16,"length2":26},{"diffs":[[0,"        "],[-1,"/*"],[0,"city = n"]],"start1":4254,"start2":4254,"length1":18,"length2":16},{"diffs":[[0,"y : "],[-1,"places.countryName"],[1,"'Brasil'"],[0,"\n   "]],"start1":4346,"start2":4346,"length1":26,"length2":16},{"diffs":[[0,"     });"],[-1,"*/"],[0,"\n\n      "]],"start1":4370,"start2":4370,"length1":18,"length2":16}]],"length":29870,"saved":false}
{"ts":1371142020512,"patch":[[{"diffs":[[0,"');\n"],[-1,"                console.log (data);\n"],[0,"    "]],"start1":4206,"start2":4206,"length1":44,"length2":8},{"diffs":[[0,"            });\n"],[1,"                                console.log (city);"],[0,"\n               "]],"start1":4327,"start2":4327,"length1":32,"length2":83}]],"length":29885,"saved":false}
{"ts":1371142048882,"patch":[[{"diffs":[[0,"e : "],[-1,"places"],[1,"data"],[0,".nam"]],"start1":4267,"start2":4267,"length1":14,"length2":12}]],"length":29883,"saved":false}
{"ts":1371142056848,"patch":[[{"diffs":[[0,"e : data"],[-1,".name"],[0,",\n      "]],"start1":4267,"start2":4267,"length1":21,"length2":16}]],"length":29878,"saved":false}
{"contributors":[],"silentsave":false,"ts":1371143364313,"patch":[[{"diffs":[[0," : '"],[-1,"localhost"],[1,"sql2.lab.ic.unicamp.br"],[0,"',\n "]],"start1":196,"start2":196,"length1":17,"length2":30},{"diffs":[[0," : '"],[-1,"root"],[1,"mc536user29"],[0,"',\n "]],"start1":239,"start2":239,"length1":12,"length2":19},{"diffs":[[0," : '"],[-1,"Aim3eif7"],[1,"iephoiha"],[0,"',\n "]],"start1":271,"start2":271,"length1":16,"length2":16},{"diffs":[[0," : '"],[-1,"social"],[1,"mc536db29"],[0,"',\n "]],"start1":300,"start2":300,"length1":14,"length2":17}]],"length":29901,"saved":false}
{"ts":1371144086043,"patch":[[{"diffs":[[0,"  });\n    }\n};\n\n"],[1,"Person.find = function (id, cb) {\n    \n}\n\n"],[0,"exports.Person ="]],"start1":29861,"start2":29861,"length1":32,"length2":74}]],"length":29943,"saved":false}
{"ts":1371144091820,"patch":[[{"diffs":[[0,"   });\n    }"],[1,";"],[0,"\n};\n\nPerson."]],"start1":29860,"start2":29860,"length1":24,"length2":25},{"diffs":[[0,"{\n    \n}"],[1,";"],[0,"\n\nexport"]],"start1":29910,"start2":29910,"length1":16,"length2":17}]],"length":29945,"saved":false}
{"ts":1371144184399,"patch":[[{"diffs":[[0,") {\n    "],[1,"db(\n        'SELECT * FROM `person` WHERE `uri` = \"' + id + '\"'\n    );"],[0,"\n};\n\nexp"]],"start1":29908,"start2":29908,"length1":16,"length2":86}]],"length":30015,"saved":false}
{"ts":1371144201840,"patch":[[{"diffs":[[0,"id + '\"'"],[1,", {}, function (persons) {\n        }\n        }"],[0,"\n    );\n"]],"start1":29971,"start2":29971,"length1":16,"length2":62}]],"length":30061,"saved":false}
{"ts":1371144263725,"patch":[[{"diffs":[[0,"sons) {\n        "],[-1,"}"],[1,"    var person = new Person({\n                name : persons[0].name,\n                uri : persons[0].uri,\n                hometown : persons[0].hometown\n            });"],[0,"\n        }\n    )"]],"start1":29998,"start2":29998,"length1":33,"length2":202}]],"length":30230,"saved":false}
{"ts":1371144341494,"patch":[[{"diffs":[[0,"            });\n"],[1,"            \n            db('SELECT * FROM `like` WHERE `uri` = \"' + id + '\"', {});\n            \n"],[0,"        }\n    );"]],"start1":30169,"start2":30169,"length1":32,"length2":129}]],"length":30327,"saved":false}
{"ts":1371144385198,"patch":[[{"diffs":[[0,");\n            \n"],[1,"            /* Pegando as musicas curtidas */\n"],[0,"            db('"]],"start1":30182,"start2":30182,"length1":32,"length2":78},{"diffs":[[0,"M `like` WHERE `"],[-1,"uri"],[1,"person"],[0,"` = \"' + id + '\""]],"start1":30272,"start2":30272,"length1":35,"length2":38},{"diffs":[[0,");\n            \n"],[1,"            /* Pegando os filmes curtidos curtidas */\n"],[0,"        }\n    );"]],"start1":30315,"start2":30315,"length1":32,"length2":86}]],"length":30430,"saved":false}
{"ts":1371144422305,"patch":[[{"diffs":[[0," db('SELECT "],[-1,"*"],[1,"`like`.`culturalAct`"],[0," FROM `like`"]],"start1":30255,"start2":30255,"length1":25,"length2":44},{"diffs":[[0,"M `like`"],[1,", `band`"],[0," WHERE `"]],"start1":30291,"start2":30291,"length1":16,"length2":24}]],"length":30457,"saved":false}
{"ts":1371144471647,"patch":[[{"diffs":[[0,"\"' + id + '\""],[1," AND `band`.`name` = `like`.`culturalAct`"],[0,"', {});\n    "]],"start1":30325,"start2":30325,"length1":24,"length2":65}]],"length":30498,"saved":false}
{"ts":1371144483677,"patch":[[{"diffs":[[0,"Act`', {"],[1,"}, function (likes) {\n                \n            "],[0,"});\n    "]],"start1":30374,"start2":30374,"length1":16,"length2":67}]],"length":30549,"saved":false}
{"ts":1371144497391,"patch":[[{"diffs":[[0,"dos curtidas */\n"],[1,"            db('SELECT `like`.`culturalAct` FROM `like`, `movie` WHERE `person` = \"' + id + '\" AND `band`.`name` = `like`.`culturalAct`', {}, function (likes) {\n                \n            });\n"],[0,"        }\n    );"]],"start1":30488,"start2":30488,"length1":32,"length2":226}]],"length":30743,"saved":false}
{"ts":1371144535960,"patch":[[{"diffs":[[0,"                "],[1,"    "],[0,"name : persons[0"]],"start1":30044,"start2":30044,"length1":32,"length2":36},{"diffs":[[0,"        "],[1,"    "],[0,"uri : pe"]],"start1":30096,"start2":30096,"length1":16,"length2":20},{"diffs":[[0,"ons[0].uri,\n"],[1,"    "],[0,"            "]],"start1":30118,"start2":30118,"length1":24,"length2":28},{"diffs":[[0,"own\n            "],[-1,"})"],[1,"    }),\n                bandsHandled = false,\n                moviesHandled = false"],[0,";\n            \n "]],"start1":30177,"start2":30177,"length1":34,"length2":115},{"diffs":[[0," + id + '\" AND `"],[-1,"band"],[1,"movie"],[0,"`.`name` = `like"]],"start1":30681,"start2":30681,"length1":36,"length2":37}]],"length":30837,"saved":false}
{"ts":1371144545065,"patch":[[{"diffs":[[0,"  })"],[-1,",\n                bandsHandled = false,\n                moviesHandled = false"],[0,";\n  "]],"start1":30195,"start2":30195,"length1":85,"length2":8},{"diffs":[[0,"                "],[1,"bandsHandled = true"],[0,"\n            });"]],"start1":30420,"start2":30420,"length1":32,"length2":51}]],"length":30779,"saved":false}
{"ts":1371144557482,"patch":[[{"diffs":[[0,"    "],[-1,"bandsHandled = true"],[1,"person.bands = likes;"],[0,"\n   "]],"start1":30432,"start2":30432,"length1":27,"length2":29}]],"length":30781,"saved":false}
{"ts":1371144562969,"patch":[[{"diffs":[[0,"                "],[1,"person.movies = likes;"],[0,"\n            });"]],"start1":30703,"start2":30703,"length1":32,"length2":54}]],"length":30803,"saved":false}
{"ts":1371144585795,"patch":[[{"diffs":[[0,".bands = likes;\n"],[1,"                if (person.bands && person.movies) {\n                    cb(person);\n                }\n"],[0,"            });\n"]],"start1":30442,"start2":30442,"length1":32,"length2":135},{"diffs":[[0,"movies = likes;\n"],[1,"                if (person.bands && person.movies) {\n                    cb(person);\n                }\n"],[0,"            });\n"]],"start1":30829,"start2":30829,"length1":32,"length2":135}]],"length":31009,"saved":false}
{"ts":1371144602036,"patch":[[{"diffs":[[0,");\n            \n"],[1,"            /* Pegando os amigos */\n            db('SELECT `like`.`culturalAct` FROM `like`, `band` WHERE `person` = \"' + id + '\" AND `band`.`name` = `like`.`culturalAct`', {}, function (likes) {\n                person.bands = likes;\n                if (person.bands && person.movies) {\n                    cb(person);\n                }\n            });\n            \n"],[0,"            /* P"]],"start1":30198,"start2":30198,"length1":32,"length2":398}]],"length":31375,"saved":false}
{"ts":1371144607722,"patch":[[{"diffs":[[0,"    db('SELECT `"],[-1,"like"],[1,"know"],[0,"`.`culturalAct` "]],"start1":30258,"start2":30258,"length1":36,"length2":36}]],"length":31375,"saved":false}
{"ts":1371144646588,"patch":[[{"diffs":[[0,"`.`c"],[-1,"ulturalAct` FROM `like`, `band"],[1,"olleague` FROM `know"],[0,"` WH"]],"start1":30278,"start2":30278,"length1":38,"length2":28},{"diffs":[[0,"+ '\""],[-1," AND `band`.`name` = `like`.`culturalAct`"],[0,"', {"]],"start1":30329,"start2":30329,"length1":49,"length2":8}]],"length":31324,"saved":false}
{"ts":1371144656673,"patch":[[{"diffs":[[0,"OM `know` WHERE "],[1,"`know`."],[0,"`person` = \"' + "]],"start1":30294,"start2":30294,"length1":32,"length2":39}]],"length":31331,"saved":false}
{"ts":1371144666104,"patch":[[{"diffs":[[0,"`, `band` WHERE "],[1,"`like`."],[0,"`person` = \"' + "]],"start1":30636,"start2":30636,"length1":32,"length2":39}]],"length":31338,"saved":false}
{"ts":1371144679332,"patch":[[{"diffs":[[0,"` WHERE "],[1,"`like`."],[0,"`person`"]],"start1":31036,"start2":31036,"length1":16,"length2":23}]],"length":31345,"saved":false}
{"ts":1371144693514,"patch":[[{"diffs":[[0,", {}, function ("],[-1,"like"],[1,"know"],[0,"s) {\n           "]],"start1":30341,"start2":30341,"length1":36,"length2":36},{"diffs":[[0,"     person."],[-1,"ba"],[1,"frie"],[0,"nds = "],[-1,"like"],[1,"know"],[0,"s;\n         "]],"start1":30377,"start2":30377,"length1":36,"length2":38}]],"length":31347,"saved":false}
{"ts":1371144707481,"patch":[[{"diffs":[[0,"&& person.movies"],[1," && person.friends"],[0,") {\n"],[-1,""],[0,"                "]],"start1":30439,"start2":30439,"length1":36,"length2":54},{"diffs":[[0,"&& person.movies"],[1," && person.friends"],[0,") {\n            "]],"start1":30840,"start2":30840,"length1":32,"length2":50},{"diffs":[[0,"movies = likes;\n"],[-1,""],[0,"                "]],"start1":31203,"start2":31203,"length1":32,"length2":32},{"diffs":[[0,"n.movies"],[1," && person.friends"],[0,") {\n    "]],"start1":31260,"start2":31260,"length1":16,"length2":34}]],"length":31401,"saved":false}
{"ts":1371145438412,"patch":[[{"diffs":[[0,");\n            \n"],[1,"            person.likes = {}\n            \n"],[0,"            /* P"]],"start1":30198,"start2":30198,"length1":32,"length2":75},{"diffs":[[0,"s amigos */\n"],[-1,""],[0,"            "]],"start1":30281,"start2":30281,"length1":24,"length2":24},{"diffs":[[0," person."],[-1,"friend"],[1,"know"],[0,"s = know"]],"start1":30424,"start2":30424,"length1":22,"length2":20},{"diffs":[[0,"ovies && person."],[-1,"friend"],[1,"know"],[0,"s) {\n           "]],"start1":30491,"start2":30491,"length1":38,"length2":36},{"diffs":[[0,"ovies && person."],[-1,"friend"],[1,"know"],[0,"s) {\n           "]],"start1":30890,"start2":30890,"length1":38,"length2":36},{"diffs":[[0,"son."],[-1,"friend"],[1,"know"],[0,"s) {"]],"start1":31312,"start2":31312,"length1":14,"length2":12}]],"length":31436,"saved":false}
{"ts":1371145446686,"patch":[[{"diffs":[[0,"     person."],[1,"likes."],[0,"bands = like"]],"start1":30819,"start2":30819,"length1":24,"length2":30},{"diffs":[[0,"     person."],[1,"likes."],[0,"movies = lik"]],"start1":31234,"start2":31234,"length1":24,"length2":30}]],"length":31448,"saved":false}
{"ts":1371145450360,"patch":[[{"diffs":[[0,"     if (person."],[1,"likes."],[0,"bands && person."]],"start1":30458,"start2":30458,"length1":32,"length2":38}]],"length":31454,"saved":false}
{"ts":1371145458915,"patch":[[{"diffs":[[0,"bands && person."],[1,"likes."],[0,"movies && person"]],"start1":30480,"start2":30480,"length1":32,"length2":38}]],"length":31460,"saved":false}
{"ts":1371145467267,"patch":[[{"diffs":[[0,"     if (person."],[1,"likes."],[0,"bands && person."]],"start1":30875,"start2":30875,"length1":32,"length2":38},{"diffs":[[0,"bands && person."],[1,"likes."],[0,"movies && person"]],"start1":30897,"start2":30897,"length1":32,"length2":38},{"diffs":[[0,"(person."],[1,"likes."],[0,"bands &&"]],"start1":31311,"start2":31311,"length1":16,"length2":22},{"diffs":[[0," person."],[1,"likes."],[0,"movies &"]],"start1":31333,"start2":31333,"length1":16,"length2":22}]],"length":31484,"saved":false}
{"ts":1371145481820,"patch":[[{"diffs":[[0,"ikes = {"],[-1,"}"],[1,"\n                bands = [],\n                movies = []\n            };"],[0,"\n       "]],"start1":30234,"start2":30234,"length1":17,"length2":87},{"diffs":[[0,"ction (knows) {\n"],[1,"                for \n                \n"],[0,"                "]],"start1":30463,"start2":30463,"length1":32,"length2":70}]],"length":31592,"saved":false}
{"ts":1371145607748,"patch":[[{"diffs":[[0,");\n            \n"],[1,"            person.knows = [];\n"],[0,"            pers"]],"start1":30198,"start2":30198,"length1":32,"length2":63},{"diffs":[[0,"  bands "],[-1,"="],[1," :"],[0," [],\n   "]],"start1":30288,"start2":30288,"length1":17,"length2":18},{"diffs":[[0," movies "],[-1,"="],[1,":"],[0," []\n    "]],"start1":30318,"start2":30318,"length1":17,"length2":17},{"diffs":[[0,"    for "],[-1,"\n                \n"],[1,"(var i in knows) {\n    "],[0,"        "]],"start1":30523,"start2":30523,"length1":34,"length2":39},{"diffs":[[0,"nows"],[-1," = knows;"],[1,".push(new Know(knows[i]));\n                }"],[0,"\n   "]],"start1":30578,"start2":30578,"length1":17,"length2":52},{"diffs":[[0,"    "],[-1,"person.likes.bands = likes;"],[1,"for (var i in likes) {\n                    person.likes.bands.push(new Like(likes[i]));\n                }"],[0,"\n   "]],"start1":31012,"start2":31012,"length1":35,"length2":113}]],"length":31742,"saved":false}
{"ts":1371145681879,"patch":[[{"diffs":[[0,"    "],[-1,"person.likes.movies = likes;"],[1,"for (var i in likes) {\n                    person.likes.movies.push(new Like(likes[i]));\n                }"],[0,"\n   "]],"start1":31517,"start2":31517,"length1":36,"length2":114}]],"length":31820,"saved":false}
{"ts":1371145702933,"patch":[[{"diffs":[[0,"              })"],[1,",\n                bandsHandled = false,\n                moviesHandled = false"],[0,";\n            \n "]],"start1":30183,"start2":30183,"length1":32,"length2":109}]],"length":31897,"saved":false}
{"ts":1371145736698,"patch":[[{"diffs":[[0,"        }),\n"],[1,"                knowsHandled = false,\n"],[0,"            "]],"start1":30189,"start2":30189,"length1":24,"length2":62},{"diffs":[[0,"              }\n"],[1,"                bandsHandled = true;\n"],[0,"                "]],"start1":30726,"start2":30726,"length1":32,"length2":69}]],"length":31972,"saved":false}
{"ts":1371145749057,"patch":[[{"diffs":[[0,"                "],[-1,"band"],[1,"know"],[0,"sHandled = true;"]],"start1":30742,"start2":30742,"length1":36,"length2":36},{"diffs":[[0,"              }\n"],[1,"                bandsHandled = true;\n"],[0,"                "]],"start1":31258,"start2":31258,"length1":32,"length2":69}]],"length":32009,"saved":false}
{"ts":1371145757688,"patch":[[{"diffs":[[0,"              }\n"],[1,"                moviesHandled = true;\n"],[0,"                "]],"start1":31801,"start2":31801,"length1":32,"length2":70}]],"length":32047,"saved":false}
{"ts":1371145781210,"patch":[[{"diffs":[[0,"if ("],[-1,"person.likes.bands && person.likes.movies && person.knows"],[1,"knowsHandled && bandsHandled && moviesHandled"],[0,") {\n"]],"start1":30795,"start2":30795,"length1":65,"length2":53}]],"length":32035,"saved":false}
{"ts":1371145786903,"patch":[[{"diffs":[[0,"if ("],[-1,"person.likes.bands && person.likes.movies && person.knows"],[1,"knowsHandled && bandsHandled && moviesHandled"],[0,") {\n"]],"start1":31315,"start2":31315,"length1":65,"length2":53},{"diffs":[[0,"if ("],[-1,"person.likes.bands && person.likes.movies && person.knows"],[1,"knowsHandled && bandsHandled && moviesHandled"],[0,") {\n"]],"start1":31847,"start2":31847,"length1":65,"length2":53}]],"length":32011,"saved":false}
{"ts":1371145845174,"patch":[[{"diffs":[[0,"    "],[-1,"this.createLike = function () {\n        \n    };"],[1,"/*\n     * Cria o like no banco de dados\n     *\n     * @param cb\n     */\n    this.createLike = function () {\n        \n    };\n    \n    /*\n     * Salva entidade no banco de dados\n     *\n     * @param cb\n     */"],[0,"\n};\n"]],"start1":28354,"start2":28354,"length1":55,"length2":215}]],"length":32171,"saved":false}
{"ts":1371145877357,"patch":[[{"diffs":[[0,"   \n    };\n    \n"],[1,"    this.createBand = function () {\n        \n    };\n    \n    this.createMovie = function () {\n        \n    };\n    \n"],[0,"    /*\n     * Sa"]],"start1":28471,"start2":28471,"length1":32,"length2":147}]],"length":32286,"saved":false}
{"ts":1371145955166,"patch":[[{"diffs":[[0,"and = function ("],[1,"cb"],[0,") {\n        \n   "]],"start1":28503,"start2":28503,"length1":32,"length2":34},{"diffs":[[0," (cb) {\n        "],[1,"Band.find(self.culturalAct, function (band) {\n            band.save();\n        })"],[0,"\n    };\n    \n   "]],"start1":28517,"start2":28517,"length1":32,"length2":113}]],"length":32369,"saved":false}
{"ts":1371145959331,"patch":[[{"diffs":[[0,"nd.save("],[1,"function () {\n                \n            }"],[0,");\n     "]],"start1":28593,"start2":28593,"length1":16,"length2":60}]],"length":32413,"saved":false}
{"ts":1371145964680,"patch":[[{"diffs":[[0,"ave("],[-1,"function () {\n                \n            }"],[1,"cb"],[0,");\n "]],"start1":28597,"start2":28597,"length1":52,"length2":10}]],"length":32371,"saved":false}
{"ts":1371145967696,"patch":[[{"diffs":[[0,"      })"],[1,";"],[0,"\n    };\n"]],"start1":28608,"start2":28608,"length1":16,"length2":17}]],"length":32372,"saved":false}
{"ts":1371145977734,"patch":[[{"diffs":[[0,"on () {\n        "],[1,"Movie.find(self.culturalAct, function (band) {\n            band.save(cb);\n        });"],[0,"\n    };\n    \n   "]],"start1":28659,"start2":28659,"length1":32,"length2":117}]],"length":32457,"saved":false}
{"ts":1371145982786,"patch":[[{"diffs":[[0,"vie = function ("],[1,"cb"],[0,") {\n        Movi"]],"start1":28647,"start2":28647,"length1":32,"length2":34}]],"length":32459,"saved":false}
{"ts":1371145989427,"patch":[[{"diffs":[[0,"lAct, function ("],[-1,"band"],[1,"movie"],[0,") {\n            "]],"start1":28700,"start2":28700,"length1":36,"length2":37},{"diffs":[[0,") {\n            "],[-1,"band"],[1,"movie"],[0,".save(cb);\n     "]],"start1":28721,"start2":28721,"length1":36,"length2":37}]],"length":32461,"saved":false}
{"ts":1371145998666,"patch":[[{"diffs":[[0,"  }\n"],[-1,"        \n        db(\n            'INSERT INTO `like` SET ?',\n            {\n                'person' : self.person,\n                'culturalAct': self.culturalAct,\n                'rating' : self.rating\n            },\n            function () {\n                if (cb) {\n                    cb(self);\n                }\n            }\n        );\n"],[0,"    "]],"start1":27995,"start2":27995,"length1":351,"length2":8}]],"length":32118,"saved":false}
{"ts":1371146000545,"patch":[[{"diffs":[[0,") {\n        "],[1,"db(\n            'INSERT INTO `like` SET ?',\n            {\n                'person' : self.person,\n                'culturalAct': self.culturalAct,\n                'rating' : self.rating\n            },\n            function () {\n                if (cb) {\n                    cb(self);\n                }\n            }\n        );"],[0,"\n    };\n    "]],"start1":28119,"start2":28119,"length1":24,"length2":349}]],"length":32443,"saved":false}
{"ts":1371146006585,"patch":[[{"diffs":[[0,"ike = function ("],[1,"cb"],[0,") {\n        db(\n"]],"start1":28103,"start2":28103,"length1":32,"length2":34}]],"length":32445,"saved":false}
{"ts":1371146029349,"patch":[[{"diffs":[[0,"ateBand("],[-1,"this.createLike"],[1,"function () {\n                this.createLike(cb);\n            }"],[0,");\n     "]],"start1":27899,"start2":27899,"length1":31,"length2":80}]],"length":32494,"saved":false}
{"ts":1371146034126,"patch":[[{"diffs":[[0,"is.c"],[-1,"reateMovie(this.createLike"],[1,"ulturalAct = this.culturalAct.replace('http://en.wikipedia.org/wiki/', '');\n            this.createBand(function () {\n                this.createLike(cb);\n            }"],[0,");\n "]],"start1":28005,"start2":28005,"length1":34,"length2":176}]],"length":32636,"saved":false}
{"ts":1371146069168,"patch":[[{"diffs":[[0,"ace("],[-1,"'"],[1,"\""],[0,"http://"],[-1,"en.wikipedia.org/wiki/', ''"],[1,"www.imdb.com/title/\", \"\").replace(\"/\", \"\""],[0,");\n "]],"start1":28043,"start2":28043,"length1":43,"length2":57}]],"length":32650,"saved":false}
{"ts":1371146081684,"patch":[[{"diffs":[[0,"     this.create"],[-1,"Band"],[1,"Movie"],[0,"(function () {\n "]],"start1":28106,"start2":28106,"length1":36,"length2":37}]],"length":32651,"saved":false}
{"ts":1371146108250,"patch":[[{"diffs":[[0," );\n    };\n    \n"],[1,"    /*\n     * Insere a banda no banco de dados\n     *\n     * @param cb\n     */\n"],[0,"    this.createB"]],"start1":28661,"start2":28661,"length1":32,"length2":111}]],"length":32730,"saved":false}
{"ts":1371146114359,"patch":[[{"diffs":[[0,"    };\n    \n"],[1,"    /*\n     * Insere a banda no banco de dados\n     *\n     * @param cb\n     */\n"],[0,"    this.cre"]],"start1":28887,"start2":28887,"length1":24,"length2":103}]],"length":32809,"saved":false}
{"ts":1371146117411,"patch":[[{"diffs":[[0,"*\n     * Insere "],[-1,"a banda"],[1,"o filme"],[0," no banco de dad"]],"start1":28904,"start2":28904,"length1":39,"length2":39}]],"length":32809,"saved":false}
{"ts":1371146161494,"patch":[[{"diffs":[[0,"   else "],[1,"{\n                "],[0,"console."]],"start1":26455,"start2":26455,"length1":16,"length2":34},{"diffs":[[0,"!\" + name);\n"],[1,"            }\n"],[0,"        }\n  "]],"start1":26514,"start2":26514,"length1":24,"length2":38}]],"length":32841,"saved":false}
{"ts":1371146177987,"patch":[[{"diffs":[[0,"       );\n    };"],[1,"\n\n    /*\n     * Remove entidade do banco de dados\n     *\n     * @param cb\n     */\n    this.save = function (cb) {\n        db(\n            'INSERT INTO `know` SET ?',\n            {\n                'person' : self.person,\n                'colleague': self.colleague\n            },\n            function () {\n                if (cb) {\n                    cb(self);\n                }\n            }\n        );\n    };"],[0,"\n};\n\nexports.Kno"]],"start1":27251,"start2":27251,"length1":32,"length2":442}]],"length":33251,"saved":false}
{"ts":1371146180418,"patch":[[{"diffs":[[0,"    */\n    this."],[-1,"sa"],[1,"remo"],[0,"ve = function (c"]],"start1":27342,"start2":27342,"length1":34,"length2":36}]],"length":33253,"saved":false}
{"ts":1371146194632,"patch":[[{"diffs":[[0,"           '"],[-1,"INSERT INTO"],[1,"DELETE FROM"],[0," `know` SET "]],"start1":27396,"start2":27396,"length1":35,"length2":35}]],"length":33253,"saved":false}
{"ts":1371146198478,"patch":[[{"diffs":[[0,"ETE FROM `know` "],[-1,"SET"],[1,"WHERE"],[0," ?',\n           "]],"start1":27411,"start2":27411,"length1":35,"length2":37}]],"length":33255,"saved":false}
{"ts":1371146218027,"patch":[[{"diffs":[[0," \n    /*\n     * "],[-1,"Salva"],[1,"Remove"],[0," entidade no ban"]],"start1":29569,"start2":29569,"length1":37,"length2":38},{"diffs":[[0,"Remove entidade "],[-1,"n"],[1,"d"],[0,"o banco de dados"]],"start1":29585,"start2":29585,"length1":33,"length2":33},{"diffs":[[0,"     */\n"],[1,"    this.remove = function (cb) {\n        db(\n            'DELETE FROM `know` WHERE ?',\n            {\n                'person' : self.person,\n                'colleague': self.colleague\n            },\n            function () {\n                if (cb) {\n                    cb(self);\n                }\n            }\n        );\n    };\n"],[0,"};\n\nexpo"]],"start1":29643,"start2":29643,"length1":16,"length2":349}]],"length":33589,"saved":false}
{"ts":1371146221560,"patch":[[{"diffs":[[0,"  'DELETE FROM `"],[-1,"know"],[1,"like"],[0,"` WHERE ?',\n    "]],"start1":29707,"start2":29707,"length1":36,"length2":36}]],"length":33589,"saved":false}
{"ts":1371146235527,"patch":[[{"diffs":[[0,"  'c"],[-1,"olleague': self.colleague"],[1,"ulturalAct': self.culturalAct"],[0,"\n   "]],"start1":29807,"start2":29807,"length1":33,"length2":37}]],"length":33593,"saved":false}
{"ts":1371146445302,"patch":[[{"diffs":[[0,"  band.save("],[-1,"cb"],[1,"function () {\n                cb(band);\n            }"],[0,");\n        }"]],"start1":29304,"start2":29304,"length1":26,"length2":77},{"diffs":[[0,"ie.save("],[-1,"cb"],[1,"function () {\n                cb(movie)\n            }"],[0,");\n     "]],"start1":29585,"start2":29585,"length1":18,"length2":69}]],"length":33695,"saved":false}
{"ts":1371146454629,"patch":[[{"diffs":[[0,"            "],[-1,"cb(band);"],[1,"if (cb) {\n                    cb(band);\n                }"],[0,"\n           "]],"start1":29334,"start2":29334,"length1":33,"length2":81}]],"length":33743,"saved":false}
{"ts":1371146461373,"patch":[[{"diffs":[[0,"        "],[-1,"cb(movie)"],[1,"if (cb) {\n                    cb(movie);\n                }"],[0,"\n       "]],"start1":29663,"start2":29663,"length1":25,"length2":74}]],"length":33792,"saved":false}
{"ts":1371146489931,"patch":[[{"diffs":[[0,"eBand(function ("],[-1,") {"],[1,"band) {\n                this.culturalAct = band.name;"],[0,"\n               "]],"start1":28347,"start2":28347,"length1":35,"length2":85}]],"length":33842,"saved":false}
{"ts":1371146498789,"patch":[[{"diffs":[[0,"Movie(function ("],[-1,") {"],[1,"movie) {\n                this.culturalAct = movie.name;"],[0,"\n               "]],"start1":28618,"start2":28618,"length1":35,"length2":87}]],"length":33894,"saved":false}
{"ts":1371146522951,"patch":[[{"diffs":[[0,"                "],[-1,"this"],[1,"self"],[0,".culturalAct = b"]],"start1":28371,"start2":28371,"length1":36,"length2":36},{"diffs":[[0,"                "],[-1,"this"],[1,"self"],[0,".createLike(cb);"]],"start1":28417,"start2":28417,"length1":36,"length2":36},{"diffs":[[0,"                "],[-1,"this"],[1,"self"],[0,".culturalAct = m"]],"start1":28643,"start2":28643,"length1":36,"length2":36},{"diffs":[[0,"            "],[-1,"this"],[1,"self"],[0,".createLike("]],"start1":28694,"start2":28694,"length1":28,"length2":28}]],"length":33894,"saved":false}
{"contributors":[],"silentsave":false,"ts":1371147542940,"patch":[[{"diffs":[[0,"me; "],[-1,"// Preciso fazer o pegar somente a parte referente à Cidade"],[0,"\n   "]],"start1":4107,"start2":4107,"length1":67,"length2":8}]],"length":33835,"saved":false}
{"ts":1371147558880,"patch":[[{"diffs":[[0,"});\n"],[-1,"                                console.log (city);"],[0,"\n   "]],"start1":4296,"start2":4296,"length1":59,"length2":8}]],"length":33784,"saved":false}
{"ts":1371147567844,"patch":[[{"diffs":[[0,"ity "],[-1,", country"],[0,";\n  "]],"start1":4033,"start2":4033,"length1":17,"length2":8}]],"length":33775,"saved":false}
{"ts":1371147589839,"patch":[[{"diffs":[[0,"zA-Z"],[-1,"\\ "],[0,"]*/ "]],"start1":4148,"start2":4148,"length1":10,"length2":8}]],"length":33773,"saved":false}
